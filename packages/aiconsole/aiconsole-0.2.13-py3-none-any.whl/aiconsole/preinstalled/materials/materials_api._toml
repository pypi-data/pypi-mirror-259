name = "Materials API"
version = "0.0.2"
usage = "When you have to write new aiconsole material."
usage_examples = []
default_status = "enabled"
content_type = "api"
content_api = """
""\"
## Location

Materials are stored in the `./materials` directory. Each material is a .toml file.

## Writing Materials

When you need to write a material based on a conversation so far, extract key information from this conversation in very consise form.
The goal is for you to read those instructions later, and be able to do this faster next time.

To generate material you need to decide about all information about new material.
You need to prepare, do it yourself, newer ask user about it:
- id - text, it will be the id and name of material
- usage - text, information when to use this material
- content_type - one of 3 texts: "static_text", "dynamic_text", "api", explain below
- content - text, content body of the material.
There can be 3 content_type of Material:

"static_text" - static text to be showed.
"dynamic_text" - text with some code to simply execute
"api" - text with python code with functions to use by aiconsole


""\"

import os
from aiconsole import projects
from aiconsole.materials import materials


def list_materials():
    ""\"
    Use it to list all aiconsole materials.
    Sample of use:
    ```python
    list_materials()
    ```
    ""\"
    return [{"id": material.id, "usage": material.usage} for material in
            projects.get_project_assets(AssetType.MATERIAL).all_assets()]

def create_material(id: str, usage: str, content_type: str, content: str) -> str:
    ""\"
    Use it to create (save) aiconsole material.

    ----------
    Example static_text material:
usage = "Use this to get to know how to get weather information."
content_type = "static_text"
content = ""\\"
# How to get weather information

In order to get weather data use the following python script:

```python
import requests

response = requests.get('https://api.open-meteo.com/v1/forecast', params={'latitude': 52.23, 'longitude': 21.01, 'current_weather': True, 'hourly': 'temperature_2m,relativehumidity_2m,windspeed_10m'})
response.json()
```
    ----------
    Example dynamic_text material:

usage = "When you need to know what is the Today's date"
content_type = "dynamic_text"
content = ""\\"
from datetime import datetime

async def content(context):
    # Get current date
    current_date = datetime.now()

    # Format as string
    current_date_string = current_date.strftime("%A, %B %d, %Y")

    return f""\\"
# Today

Today is {current_date_string}
""\\".strip()

    ----------
    Sample of use:
    ```python
    create_material(
        id: "some id",
        usage: "some idea when to use it",
        content_type: "static_text",
        content: "lots of content"
    )
    ```
    ""\"
    material = materials.Material(
        id=id,
        name=id,
        version="0.0.1",
        usage=usage,
        defined_in="project",
        content_type=content_type
    )
    content_index = {
        "static_text": "content_static_text",
        "dynamic_text": "content_dynamic_text",
        "api": "content_api",
    }[content_type]
    material.__setattr__(content_index, content)
    projects.get_project_assets(AssetType.MATERIAL).save_material(material=material, new=True)

    return material.id

def read_material(id: str):
    ""\"
    Use that function to read information about AIConsole material by material id.
    Sample of use:
    ```python
    read_material("today")
    ```
    ""\"
    path = os.path.join(projects.get_project_assets(AssetType.MATERIAL).user_directory, f'{id}.toml')

    if not os.path.exists(path):
        raise Exception(f"Material with id {id} does not exist")

    with open(path, 'r', encoding="utf8", errors='replace') as f:
        return f.read()
"""
