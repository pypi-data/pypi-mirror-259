{"version":3,"file":"lib_index_js.4f9612dca8d7bd07dc91.js","mappings":"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","sources":["webpack://myextension/./src/index.ts"],"sourcesContent":["import {\r\n  JupyterFrontEnd,\r\n  JupyterFrontEndPlugin,\r\n  ILayoutRestorer,\r\n} from '@jupyterlab/application';\r\nimport { ICommandPalette, MainAreaWidget,  WidgetTracker } from '@jupyterlab/apputils';\r\nimport { Widget } from '@lumino/widgets';\r\n\r\ninterface APODResponse {\r\n  copyright: string;\r\n  date: string;\r\n  explanation: string;\r\n  media_type: 'video' | 'image';\r\n  title: string;\r\n  url: string;\r\n}\r\n\r\nclass APODWidget extends Widget {\r\n  /**\r\n   * Construct a new APOD widget.\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    this.addClass('my-apodWidget');\r\n\r\n    // Add an image element to the panel\r\n    this.img = document.createElement('img');\r\n    this.node.appendChild(this.img);\r\n\r\n    // Add a summary element to the panel\r\n    this.summary = document.createElement('p');\r\n    this.node.appendChild(this.summary);\r\n  }\r\n\r\n  /**\r\n   * The image element associated with the widget.\r\n   */\r\n  readonly img: HTMLImageElement;\r\n\r\n  /**\r\n   * The summary text element associated with the widget.\r\n   */\r\n  readonly summary: HTMLParagraphElement;\r\n\r\n  /**\r\n   * Handle update requests for the widget.\r\n   */\r\n  async updateAPODImage(): Promise<void> {\r\n    const response = await fetch(\r\n      `https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY&date=${this.randomDate()}`\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        this.summary.innerText = data.error.message;\r\n      } else {\r\n        this.summary.innerText = response.statusText;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const data = (await response.json()) as APODResponse;\r\n\r\n    if (data.media_type === 'image') {\r\n      // Populate the image\r\n      this.img.src = data.url;\r\n      this.img.title = data.title;\r\n      this.summary.innerText = data.title;\r\n      if (data.copyright) {\r\n        this.summary.innerText += ` (Copyright ${data.copyright})`;\r\n      }\r\n    } else {\r\n      this.summary.innerText = 'Random APOD fetched was not an image.';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a random date string in YYYY-MM-DD format.\r\n   */\r\n  randomDate(): string {\r\n    const start = new Date(2010, 1, 1);\r\n    const end = new Date();\r\n    const randomDate = new Date(\r\n      start.getTime() + Math.random() * (end.getTime() - start.getTime())\r\n    );\r\n    return randomDate.toISOString().slice(0, 10);\r\n  }\r\n}\r\n\r\nfunction activate(app: JupyterFrontEnd, palette: ICommandPalette, restorer: ILayoutRestorer | null) {\r\n  console.log('JupyterLab extension jupyterlab_apod is activated!');\r\n\r\n  // Declare a widget variable\r\n  let widget: MainAreaWidget<APODWidget>;\r\n\r\n  // Add an application command\r\n  const command: string = 'apod:open';\r\n  app.commands.addCommand(command, {\r\n    label: '测试一下',\r\n    execute: () => {\r\n      if (!widget || widget.isDisposed) {\r\n        const content = new APODWidget();\r\n        widget = new MainAreaWidget({content});\r\n        widget.id = 'apod-jupyterlab';\r\n        widget.title.label = '测试一下图片';\r\n        widget.title.closable = true;\r\n      }\r\n      if (!tracker.has(widget)) {\r\n        // Track the state of the widget for later restoration\r\n        tracker.add(widget);\r\n      }\r\n      if (!widget.isAttached) {\r\n        // Attach the widget to the main work area if it's not there\r\n        app.shell.add(widget, 'main');\r\n      }\r\n      widget.content.updateAPODImage();\r\n\r\n      // Activate the widget\r\n      app.shell.activateById(widget.id);\r\n    }\r\n  });\r\n\r\n  // Add the command to the palette.\r\n  palette.addItem({ command, category: 'Tutorial' });\r\n\r\n  // Track and restore the widget state\r\n  let tracker = new WidgetTracker<MainAreaWidget<APODWidget>>({\r\n    namespace: 'apod'\r\n  });\r\n  if (restorer) {\r\n    restorer.restore(tracker, {\r\n      command,\r\n      name: () => 'apod'\r\n    });\r\n  }\r\n}\r\n/**\r\n * Initialization data for the myextension extension.\r\n */\r\nconst plugin: JupyterFrontEndPlugin<void> = {\r\n  id: 'myextension:plugin',\r\n  description: 'A JupyterLab extension.',\r\n  autoStart: true,\r\n  requires: [ICommandPalette],\r\n  optional: [ILayoutRestorer],\r\n  activate: activate\r\n};\r\n\r\nexport default plugin;\r\n"],"names":[],"sourceRoot":""}