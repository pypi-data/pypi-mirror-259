# -*- coding: utf-8 -*-
#
# Copyright (C) 2020 CERN.
# Copyright (C) 2020 Northwestern University.
#
# Invenio-RDM-Records is free software; you can redistribute it and/or modify
# it under the terms of the MIT License; see LICENSE file for more details.

name: CI

on:
  push:
    branches: master
  pull_request:
    branches:
      - master
      - "maint-**"
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 3 * * 6"
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason"
        required: false
        default: "Manual trigger"

jobs:
  Tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        requirements-level: [pypi]
        db-service: [postgresql14]
        search-service: [opensearch2]
        node-version: [16.x]
        include:
          - db-service: postgresql14
            DB_EXTRAS: "postgresql"

          - search-service: opensearch2
            SEARCH_EXTRAS: "opensearch2"
    env:
      DB: ${{ matrix.db-service }}
      SEARCH: ${{ matrix.search-service }}
      EXTRAS: tests,${{ matrix.SEARCH_EXTRAS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run eslint test
        run: ./run-js-linter.sh -i

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Generate dependencies
        run: |
          pip install wheel requirements-builder
          requirements-builder -e "$EXTRAS" --level=${{ matrix.requirements-level }} setup.py > .${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt
          cat .${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt') }}

      - name: Install dependencies
        run: |
          pip install -r .${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt -c constraints-${{ matrix.requirements-level }}.txt
          pip install ".[$EXTRAS]"
          pip freeze
          docker --version
          docker-compose --version

      - name: Run translations test
        run: ./run-i18n-tests.sh

      - name: Run tests
        run: |
          ./run-tests.sh

      - name: Install deps for frontend tests
        working-directory: ./invenio_rdm_records/assets/semantic-ui/js/invenio_rdm_records
        run: npm install

      - name: Install deps for frontend tests - translations
        working-directory: ./invenio_rdm_records/assets/semantic-ui/translations/invenio_rdm_records
        run: npm install

      - name: Run frontend tests
        working-directory: ./invenio_rdm_records/assets/semantic-ui/js/invenio_rdm_records
        run: npm test
