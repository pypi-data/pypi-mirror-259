{"version":3,"file":"chunks/22440.b763c1c30d6b5cfb39cd.min.js","mappings":"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","sources":["webpack://plone.staticresources/./node_modules/tinymce/plugins/template/index.js","webpack://plone.staticresources/./node_modules/tinymce/plugins/template/plugin.js"],"sourcesContent":["// Exports the \"template\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/template')\n//   ES2015:\n//     import 'tinymce/plugins/template'\nrequire('./plugin.js');","/**\n * TinyMCE version 6.8.3 (2024-02-08)\n */\n\n(function () {\n    'use strict';\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isArray = isType('array');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isArrayOf = (value, pred) => {\n      if (isArray(value)) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n          if (!pred(value[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    };\n\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    function curry(fn, ...initialArgs) {\n      return (...restArgs) => {\n        const all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    const never = constant(false);\n\n    const escape = text => text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('template_cdate_classes', {\n        processor: 'string',\n        default: 'cdate'\n      });\n      registerOption('template_mdate_classes', {\n        processor: 'string',\n        default: 'mdate'\n      });\n      registerOption('template_selected_content_classes', {\n        processor: 'string',\n        default: 'selcontent'\n      });\n      registerOption('template_preview_replace_values', { processor: 'object' });\n      registerOption('template_replace_values', { processor: 'object' });\n      registerOption('templates', {\n        processor: value => isString(value) || isArrayOf(value, isObject) || isFunction(value),\n        default: []\n      });\n      registerOption('template_cdate_format', {\n        processor: 'string',\n        default: editor.translate('%Y-%m-%d')\n      });\n      registerOption('template_mdate_format', {\n        processor: 'string',\n        default: editor.translate('%Y-%m-%d')\n      });\n    };\n    const getCreationDateClasses = option('template_cdate_classes');\n    const getModificationDateClasses = option('template_mdate_classes');\n    const getSelectedContentClasses = option('template_selected_content_classes');\n    const getPreviewReplaceValues = option('template_preview_replace_values');\n    const getTemplateReplaceValues = option('template_replace_values');\n    const getTemplates = option('templates');\n    const getCdateFormat = option('template_cdate_format');\n    const getMdateFormat = option('template_mdate_format');\n    const getContentStyle = option('content_style');\n    const shouldUseContentCssCors = option('content_css_cors');\n    const getBodyClass = option('body_class');\n\n    const addZeros = (value, len) => {\n      value = '' + value;\n      if (value.length < len) {\n        for (let i = 0; i < len - value.length; i++) {\n          value = '0' + value;\n        }\n      }\n      return value;\n    };\n    const getDateTime = (editor, fmt, date = new Date()) => {\n      const daysShort = 'Sun Mon Tue Wed Thu Fri Sat Sun'.split(' ');\n      const daysLong = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday'.split(' ');\n      const monthsShort = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' ');\n      const monthsLong = 'January February March April May June July August September October November December'.split(' ');\n      fmt = fmt.replace('%D', '%m/%d/%Y');\n      fmt = fmt.replace('%r', '%I:%M:%S %p');\n      fmt = fmt.replace('%Y', '' + date.getFullYear());\n      fmt = fmt.replace('%y', '' + date.getYear());\n      fmt = fmt.replace('%m', addZeros(date.getMonth() + 1, 2));\n      fmt = fmt.replace('%d', addZeros(date.getDate(), 2));\n      fmt = fmt.replace('%H', '' + addZeros(date.getHours(), 2));\n      fmt = fmt.replace('%M', '' + addZeros(date.getMinutes(), 2));\n      fmt = fmt.replace('%S', '' + addZeros(date.getSeconds(), 2));\n      fmt = fmt.replace('%I', '' + ((date.getHours() + 11) % 12 + 1));\n      fmt = fmt.replace('%p', '' + (date.getHours() < 12 ? 'AM' : 'PM'));\n      fmt = fmt.replace('%B', '' + editor.translate(monthsLong[date.getMonth()]));\n      fmt = fmt.replace('%b', '' + editor.translate(monthsShort[date.getMonth()]));\n      fmt = fmt.replace('%A', '' + editor.translate(daysLong[date.getDay()]));\n      fmt = fmt.replace('%a', '' + editor.translate(daysShort[date.getDay()]));\n      fmt = fmt.replace('%%', '%');\n      return fmt;\n    };\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const exists = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n\n    const hasOwnProperty = Object.hasOwnProperty;\n    const get = (obj, key) => {\n      return has(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.html.Serializer');\n\n    const entitiesAttr = {\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '&': '&amp;',\n      '\\'': '&#039;'\n    };\n    const htmlEscape = html => html.replace(/[\"'<>&]/g, match => get(entitiesAttr, match).getOr(match));\n    const hasAnyClasses = (dom, n, classes) => exists(classes.split(/\\s+/), c => dom.hasClass(n, c));\n    const parseAndSerialize = (editor, html) => global$1({ validate: true }, editor.schema).serialize(editor.parser.parse(html, { insert: true }));\n\n    const createTemplateList = (editor, callback) => {\n      return () => {\n        const templateList = getTemplates(editor);\n        if (isFunction(templateList)) {\n          templateList(callback);\n        } else if (isString(templateList)) {\n          fetch(templateList).then(res => {\n            if (res.ok) {\n              res.json().then(callback);\n            }\n          });\n        } else {\n          callback(templateList);\n        }\n      };\n    };\n    const replaceTemplateValues = (html, templateValues) => {\n      global$2.each(templateValues, (v, k) => {\n        if (isFunction(v)) {\n          v = v(k);\n        }\n        html = html.replace(new RegExp('\\\\{\\\\$' + escape(k) + '\\\\}', 'g'), v);\n      });\n      return html;\n    };\n    const replaceVals = (editor, scope) => {\n      const dom = editor.dom, vl = getTemplateReplaceValues(editor);\n      global$2.each(dom.select('*', scope), e => {\n        global$2.each(vl, (v, k) => {\n          if (dom.hasClass(e, k)) {\n            if (isFunction(v)) {\n              v(e);\n            }\n          }\n        });\n      });\n    };\n    const insertTemplate = (editor, _ui, html) => {\n      const dom = editor.dom;\n      const sel = editor.selection.getContent();\n      html = replaceTemplateValues(html, getTemplateReplaceValues(editor));\n      let el = dom.create('div', {}, parseAndSerialize(editor, html));\n      const n = dom.select('.mceTmpl', el);\n      if (n && n.length > 0) {\n        el = dom.create('div');\n        el.appendChild(n[0].cloneNode(true));\n      }\n      global$2.each(dom.select('*', el), n => {\n        if (hasAnyClasses(dom, n, getCreationDateClasses(editor))) {\n          n.innerHTML = getDateTime(editor, getCdateFormat(editor));\n        }\n        if (hasAnyClasses(dom, n, getModificationDateClasses(editor))) {\n          n.innerHTML = getDateTime(editor, getMdateFormat(editor));\n        }\n        if (hasAnyClasses(dom, n, getSelectedContentClasses(editor))) {\n          n.innerHTML = sel;\n        }\n      });\n      replaceVals(editor, el);\n      editor.execCommand('mceInsertContent', false, el.innerHTML);\n      editor.addVisual();\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const getPreviewContent = (editor, html) => {\n      var _a;\n      let previewHtml = parseAndSerialize(editor, html);\n      if (html.indexOf('<html>') === -1) {\n        let contentCssEntries = '';\n        const contentStyle = (_a = getContentStyle(editor)) !== null && _a !== void 0 ? _a : '';\n        const cors = shouldUseContentCssCors(editor) ? ' crossorigin=\"anonymous\"' : '';\n        global$2.each(editor.contentCSS, url => {\n          contentCssEntries += '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + editor.documentBaseURI.toAbsolute(url) + '\"' + cors + '>';\n        });\n        if (contentStyle) {\n          contentCssEntries += '<style type=\"text/css\">' + contentStyle + '</style>';\n        }\n        const bodyClass = getBodyClass(editor);\n        const encode = editor.dom.encode;\n        const isMetaKeyPressed = global.os.isMacOS() || global.os.isiOS() ? 'e.metaKey' : 'e.ctrlKey && !e.altKey';\n        const preventClicksOnLinksScript = '<script>' + 'document.addEventListener && document.addEventListener(\"click\", function(e) {' + 'for (var elm = e.target; elm; elm = elm.parentNode) {' + 'if (elm.nodeName === \"A\" && !(' + isMetaKeyPressed + ')) {' + 'e.preventDefault();' + '}' + '}' + '}, false);' + '</script> ';\n        const directionality = editor.getBody().dir;\n        const dirAttr = directionality ? ' dir=\"' + encode(directionality) + '\"' : '';\n        previewHtml = '<!DOCTYPE html>' + '<html>' + '<head>' + '<base href=\"' + encode(editor.documentBaseURI.getURI()) + '\">' + contentCssEntries + preventClicksOnLinksScript + '</head>' + '<body class=\"' + encode(bodyClass) + '\"' + dirAttr + '>' + previewHtml + '</body>' + '</html>';\n      }\n      return replaceTemplateValues(previewHtml, getPreviewReplaceValues(editor));\n    };\n    const open = (editor, templateList) => {\n      const createTemplates = () => {\n        if (!templateList || templateList.length === 0) {\n          const message = editor.translate('No templates defined.');\n          editor.notificationManager.open({\n            text: message,\n            type: 'info'\n          });\n          return Optional.none();\n        }\n        return Optional.from(global$2.map(templateList, (template, index) => {\n          const isUrlTemplate = t => t.url !== undefined;\n          return {\n            selected: index === 0,\n            text: template.title,\n            value: {\n              url: isUrlTemplate(template) ? Optional.from(template.url) : Optional.none(),\n              content: !isUrlTemplate(template) ? Optional.from(template.content) : Optional.none(),\n              description: template.description\n            }\n          };\n        }));\n      };\n      const createSelectBoxItems = templates => map(templates, t => ({\n        text: t.text,\n        value: t.text\n      }));\n      const findTemplate = (templates, templateTitle) => find(templates, t => t.text === templateTitle);\n      const loadFailedAlert = api => {\n        editor.windowManager.alert('Could not load the specified template.', () => api.focus('template'));\n      };\n      const getTemplateContent = t => t.value.url.fold(() => Promise.resolve(t.value.content.getOr('')), url => fetch(url).then(res => res.ok ? res.text() : Promise.reject()));\n      const onChange = (templates, updateDialog) => (api, change) => {\n        if (change.name === 'template') {\n          const newTemplateTitle = api.getData().template;\n          findTemplate(templates, newTemplateTitle).each(t => {\n            api.block('Loading...');\n            getTemplateContent(t).then(previewHtml => {\n              updateDialog(api, t, previewHtml);\n            }).catch(() => {\n              updateDialog(api, t, '');\n              api.setEnabled('save', false);\n              loadFailedAlert(api);\n            });\n          });\n        }\n      };\n      const onSubmit = templates => api => {\n        const data = api.getData();\n        findTemplate(templates, data.template).each(t => {\n          getTemplateContent(t).then(previewHtml => {\n            editor.execCommand('mceInsertTemplate', false, previewHtml);\n            api.close();\n          }).catch(() => {\n            api.setEnabled('save', false);\n            loadFailedAlert(api);\n          });\n        });\n      };\n      const openDialog = templates => {\n        const selectBoxItems = createSelectBoxItems(templates);\n        const buildDialogSpec = (bodyItems, initialData) => ({\n          title: 'Insert Template',\n          size: 'large',\n          body: {\n            type: 'panel',\n            items: bodyItems\n          },\n          initialData,\n          buttons: [\n            {\n              type: 'cancel',\n              name: 'cancel',\n              text: 'Cancel'\n            },\n            {\n              type: 'submit',\n              name: 'save',\n              text: 'Save',\n              primary: true\n            }\n          ],\n          onSubmit: onSubmit(templates),\n          onChange: onChange(templates, updateDialog)\n        });\n        const updateDialog = (dialogApi, template, previewHtml) => {\n          const content = getPreviewContent(editor, previewHtml);\n          const bodyItems = [\n            {\n              type: 'listbox',\n              name: 'template',\n              label: 'Templates',\n              items: selectBoxItems\n            },\n            {\n              type: 'htmlpanel',\n              html: `<p aria-live=\"polite\">${ htmlEscape(template.value.description) }</p>`\n            },\n            {\n              label: 'Preview',\n              type: 'iframe',\n              name: 'preview',\n              sandboxed: false,\n              transparent: false\n            }\n          ];\n          const initialData = {\n            template: template.text,\n            preview: content\n          };\n          dialogApi.unblock();\n          dialogApi.redial(buildDialogSpec(bodyItems, initialData));\n          dialogApi.focus('template');\n        };\n        const dialogApi = editor.windowManager.open(buildDialogSpec([], {\n          template: '',\n          preview: ''\n        }));\n        dialogApi.block('Loading...');\n        getTemplateContent(templates[0]).then(previewHtml => {\n          updateDialog(dialogApi, templates[0], previewHtml);\n        }).catch(() => {\n          updateDialog(dialogApi, templates[0], '');\n          dialogApi.setEnabled('save', false);\n          loadFailedAlert(dialogApi);\n        });\n      };\n      const optTemplates = createTemplates();\n      optTemplates.each(openDialog);\n    };\n\n    const showDialog = editor => templates => {\n      open(editor, templates);\n    };\n    const register$1 = editor => {\n      editor.addCommand('mceInsertTemplate', curry(insertTemplate, editor));\n      editor.addCommand('mceTemplate', createTemplateList(editor, showDialog(editor)));\n    };\n\n    const setup = editor => {\n      editor.on('PreProcess', o => {\n        const dom = editor.dom, dateFormat = getMdateFormat(editor);\n        global$2.each(dom.select('div', o.node), e => {\n          if (dom.hasClass(e, 'mceTmpl')) {\n            global$2.each(dom.select('*', e), e => {\n              if (hasAnyClasses(dom, e, getModificationDateClasses(editor))) {\n                e.innerHTML = getDateTime(editor, dateFormat);\n              }\n            });\n            replaceVals(editor, e);\n          }\n        });\n      });\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      const onAction = () => editor.execCommand('mceTemplate');\n      editor.ui.registry.addButton('template', {\n        icon: 'template',\n        tooltip: 'Insert template',\n        onSetup: onSetupEditable(editor),\n        onAction\n      });\n      editor.ui.registry.addMenuItem('template', {\n        icon: 'template',\n        text: 'Insert template...',\n        onSetup: onSetupEditable(editor),\n        onAction\n      });\n    };\n\n    var Plugin = () => {\n      global$3.add('template', editor => {\n        register$2(editor);\n        register(editor);\n        register$1(editor);\n        setup(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$3","tinymce","util","Tools","resolve","isType","type","value","x","t","Array","isArray","o","v","proto","constructor","String","prototype","isPrototypeOf","_a","name","typeOf","isString","isObject","isFunction","never","global$2","option","editor","options","get","register$2","registerOption","register","processor","default","pred","i","len","length","isArrayOf","translate","getCreationDateClasses","getModificationDateClasses","getSelectedContentClasses","getPreviewReplaceValues","getTemplateReplaceValues","getTemplates","getCdateFormat","getMdateFormat","getContentStyle","shouldUseContentCssCors","getBodyClass","addZeros","getDateTime","fmt","date","Date","daysShort","split","daysLong","monthsShort","monthsLong","replace","getFullYear","getYear","getMonth","getDate","getHours","getMinutes","getSeconds","getDay","Optional","tag","this","some","none","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","predicate","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","from","a","isNullable","getOrNull","getOrUndefined","each","worker","toArray","toString","find","xs","until","findUntil","hasOwnProperty","Object","has","obj","key","call","global$1","entitiesAttr","htmlEscape","html","match","hasAnyClasses","dom","n","classes","c","hasClass","parseAndSerialize","validate","schema","serialize","parser","parse","insert","replaceTemplateValues","templateValues","k","RegExp","replaceVals","scope","vl","select","e","insertTemplate","_ui","sel","selection","getContent","el","create","appendChild","cloneNode","innerHTML","execCommand","addVisual","global","open","templateList","createSelectBoxItems","templates","f","r","text","findTemplate","templateTitle","loadFailedAlert","api","windowManager","alert","focus","getTemplateContent","url","Promise","content","fetch","then","res","ok","reject","onChange","updateDialog","change","newTemplateTitle","getData","template","block","previewHtml","catch","setEnabled","onSubmit","data","close","notificationManager","index","isUrlTemplate","undefined","selected","title","description","createTemplates","selectBoxItems","buildDialogSpec","bodyItems","initialData","size","body","items","buttons","primary","dialogApi","indexOf","contentCssEntries","contentStyle","cors","contentCSS","documentBaseURI","toAbsolute","bodyClass","encode","preventClicksOnLinksScript","os","isMacOS","isiOS","directionality","getBody","dir","dirAttr","getURI","getPreviewContent","label","sandboxed","transparent","preview","unblock","redial","register$1","addCommand","fn","initialArgs","restArgs","all","concat","apply","curry","callback","json","createTemplateList","showDialog","onSetupEditable","nodeChanged","isEditable","on","off","add","onAction","ui","registry","addButton","icon","tooltip","onSetup","addMenuItem","dateFormat","node","setup"],"sourceRoot":""}