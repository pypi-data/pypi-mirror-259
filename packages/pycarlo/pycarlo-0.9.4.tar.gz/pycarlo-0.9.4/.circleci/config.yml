version: 2.1

deploy_filter: &deploy_filter
  # YAML reference for tag based filtering on deployments
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/

test_steps: &test_steps
  steps:
    - checkout
    - run:
        name: Install dependencies
        command: pip install virtualenv==20.13.0
    - run:
        name: Run unit tests
        command: make install-with-tests

sanity_check: &sanity_check_steps
  steps:
    - checkout
    - run:
        name: Install dependencies
        command: pip install virtualenv==20.13.0
    - run:
        name: Make Sanity Check
        command: |
          make install
          echo "MCD_API_ENDPOINT=https://api.getmontecarlo.com/graphql" > utils/.env
          echo "MCD_DEFAULT_API_ID=${MCD_DEFAULT_API_ID}" >> utils/.env
          echo "MCD_DEFAULT_API_TOKEN=${MCD_DEFAULT_API_TOKEN}" >> utils/.env
          make sanity-check

commands:
  cmd-trufflehog-scan:
    parameters:
      disable_entropy:
        default: true
        description: Should we disable truffleHog's entropy detection?
        type: boolean
      max_history:
        default: "1"
        description: How far back to scan in git revisions
        type: string
      regexp_rules:
        default: ""
        description: Override default regexp rules with this file.
        type: string
      allowlist_file:
        default: ".circleci/trufflehog_config/allowlist.json"
        description: Add items to this file to allow you to override specific findings.
        type: string
      repo_path:
        default: .
        description: Scan alternate local or remote repo
        type: string
      current_branch:
        default: ${CIRCLE_BRANCH}
        description: Git branch to use
        type: string
    steps:
    - run:
        command: >
          trufflehog --regex --json \
                     --branch << parameters.current_branch >> \
                     <<# parameters.allowlist_file >> --allow << parameters.allowlist_file >> <</ parameters.allowlist_file >> \
                     <<# parameters.max_history >> --max_depth=<< parameters.max_history >> <</ parameters.max_history>> \
                     <<# parameters.disable_entropy >> --entropy=False <</ parameters.disable_entropy >> \
                     <<# parameters.regexp_rules >> --rules=<< parameters.regexp_rules >> <</ parameters.regexp_rules >> \
                     << parameters.repo_path >> \
                     | jq '{"reason":.reason,"path": .path}'
        name: Scan using truffleHog

jobs:
  run-trufflehog-scan:
    docker:
    - image: cimg/python:3.10
    parameters:
      current_branch:
        default: ${CIRCLE_BRANCH}
        description: Git branch to use
        type: string
    steps:
    - checkout
    - run:
        command: pip install truffleHog
        name: Install truffleHog
    - cmd-trufflehog-scan:
        current_branch: << parameters.current_branch >>

  run-test-3-7:
    docker:
      - image: python:3.7
    <<: *test_steps

  run-test-3-8:
    docker:
      - image: python:3.8
    <<: *test_steps

  run-test-3-9:
    docker:
      - image: python:3.9
    <<: *test_steps

  run-test-3-10:
    docker:
      - image: python:3.10
    <<: *test_steps

  run-test-3-11:
    docker:
      - image: python:3.11
    <<: *test_steps

  run-sanity-check:
    docker:
      - image: python:3.9
    <<: *sanity_check_steps

  deploy:
    docker:
      - image: python:3.8.6

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install virtualenv==20.13.0
      - run:
          name: Deploy to PyPI
          command: make distribute

workflows:
  version: 2

  build:
    jobs:
      - run-trufflehog-scan
      - run-test-3-7
      - run-test-3-8
      - run-test-3-9
      - run-test-3-10
      - run-test-3-11
      - run-sanity-check:
          context: mc-prod

  deploy:
    jobs:
      - run-trufflehog-scan:
          current_branch: main
          <<: *deploy_filter
      - run-test-3-7:
          <<: *deploy_filter
      - run-test-3-8:
          <<: *deploy_filter
      - run-test-3-9:
          <<: *deploy_filter
      - run-test-3-10:
          <<: *deploy_filter
      - run-test-3-11:
          <<: *deploy_filter
      - run-sanity-check:
          context: mc-prod
          <<: *deploy_filter
      - deploy:
          requires:
            - run-trufflehog-scan
            - run-test-3-7
            - run-test-3-8
            - run-test-3-9
            - run-test-3-10
            - run-test-3-11
            - run-sanity-check
          <<: *deploy_filter
