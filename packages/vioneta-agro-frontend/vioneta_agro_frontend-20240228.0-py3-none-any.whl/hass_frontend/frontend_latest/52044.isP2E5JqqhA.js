export const id=52044;export const ids=[52044];export const modules={71596:(e,t,i)=>{var s=i(5576),n=i(37668),a=i(54915),l=i(84244),o=i(55736),r=i(83120),h=i(6600),d=i(52384),c=i(73844),u=i(10334);const v=(e,t,i)=>180*(0,u.MF)((0,u.Cs)(e,t,i),t,i)/100;(0,s.c)([(0,o.Kx)("ha-gauge")],(function(e,t){class i extends t{constructor(...t){super(...t),e(this)}}return{F:i,d:[{kind:"field",decorators:[(0,o.qq)({type:Number})],key:"min",value:()=>0},{kind:"field",decorators:[(0,o.qq)({type:Number})],key:"max",value:()=>100},{kind:"field",decorators:[(0,o.qq)({type:Number})],key:"value",value:()=>0},{kind:"field",decorators:[(0,o.qq)({attribute:!1})],key:"formatOptions",value:void 0},{kind:"field",decorators:[(0,o.qq)({type:String})],key:"valueText",value:void 0},{kind:"field",decorators:[(0,o.qq)({attribute:!1})],key:"locale",value:void 0},{kind:"field",decorators:[(0,o.qq)({type:Boolean})],key:"needle",value:()=>!1},{kind:"field",decorators:[(0,o.qq)({type:Array})],key:"levels",value:void 0},{kind:"field",decorators:[(0,o.qq)()],key:"label",value:()=>""},{kind:"field",decorators:[(0,o.K2)()],key:"_angle",value:()=>0},{kind:"field",decorators:[(0,o.K2)()],key:"_updated",value:()=>!1},{kind:"field",decorators:[(0,o.K2)()],key:"_segment_label",value:()=>""},{kind:"method",key:"firstUpdated",value:function(e){(0,n.c)((0,a.c)(i.prototype),"firstUpdated",this).call(this,e),(0,c.I)((()=>{this._updated=!0,this._angle=v(this.value,this.min,this.max),this._segment_label=this.getSegmentLabel(),this._rescale_svg()}))}},{kind:"method",key:"updated",value:function(e){(0,n.c)((0,a.c)(i.prototype),"updated",this).call(this,e),this._updated&&(e.has("value")||e.has("label")||e.has("_segment_label"))&&(this._angle=v(this.value,this.min,this.max),this._segment_label=this.getSegmentLabel(),this._rescale_svg())}},{kind:"method",key:"render",value:function(){return l.WW` <svg viewBox="-50 -50 100 50" class="gauge"> ${this.needle&&this.levels?"":l.WW`<path class="dial" d="M -40 0 A 40 40 0 0 1 40 0"></path>`} ${this.levels?this.levels.sort(((e,t)=>e.level-t.level)).map(((e,t)=>{let i;if(0===t&&e.level!==this.min){const e=v(this.min,this.min,this.max);i=l.WW`<path stroke="var(--info-color)" class="level" d="M
                          ${0-40*Math.cos(e*Math.PI/180)}
                          ${0-40*Math.sin(e*Math.PI/180)}
                         A 40 40 0 0 1 40 0
                        "></path>`}const s=v(e.level,this.min,this.max);return l.WW`${i}<path stroke="${e.stroke}" class="level" d="M
                        ${0-40*Math.cos(s*Math.PI/180)}
                        ${0-40*Math.sin(s*Math.PI/180)}
                       A 40 40 0 0 1 40 0
                      "></path>`})):""} ${this.needle?l.WW`<path class="needle" d="M -25 -2.5 L -47.5 0 L -25 2.5 z" style="${(0,r.C)({transform:`rotate(${this._angle}deg)`})}"> </path>`:l.WW`<path class="value" d="M -40 0 A 40 40 0 1 0 40 0" style="${(0,r.C)({transform:`rotate(${this._angle}deg)`})}"></path>`}  </svg> <svg class="text"> <text class="value-text"> ${this._segment_label?this._segment_label:this.valueText||(0,h.iy)(this.value,this.locale,this.formatOptions)}${this._segment_label?"":"%"===this.label?(0,d.U)(this.locale)+"%":` ${this.label}`} </text> </svg>`}},{kind:"method",key:"_rescale_svg",value:function(){const e=this.shadowRoot.querySelector(".text"),t=e.querySelector("text").getBBox();e.setAttribute("viewBox",`${t.x} ${t.y} ${t.width} ${t.height}`)}},{kind:"method",key:"getSegmentLabel",value:function(){if(this.levels){this.levels.sort(((e,t)=>e.level-t.level));for(let e=this.levels.length-1;e>=0;e--)if(this.value>=this.levels[e].level)return this.levels[e].label}return""}},{kind:"get",static:!0,key:"styles",value:function(){return l.gV`:host{position:relative}.dial{fill:none;stroke:var(--primary-background-color);stroke-width:15}.value{fill:none;stroke-width:15;stroke:var(--gauge-color);transition:all 1s ease 0s}.needle{fill:var(--primary-text-color);transition:all 1s ease 0s}.level{fill:none;stroke-width:15}.gauge{display:block}.text{position:absolute;max-height:40%;max-width:55%;left:50%;bottom:-6%;transform:translate(-50%,0%)}.value-text{font-size:50px;fill:var(--primary-text-color);text-anchor:middle;direction:ltr}`}}]}}),l.oH)},52044:(e,t,i)=>{i.r(t),i.d(t,{DEFAULT_MAX:()=>p,DEFAULT_MIN:()=>k,severityMap:()=>_});var s=i(5576),n=i(37668),a=i(54915),l=i(84244),o=i(55736),r=i(83120),h=i(84619),d=i(90360),c=i(56552),u=i(47224),v=i(6600),f=(i(13332),i(71596),i(38076)),g=i(70836),m=i(72268),y=i(27176);const k=0,p=100,_={red:"var(--error-color)",green:"var(--success-color)",yellow:"var(--warning-color)",normal:"var(--info-color)"};(0,s.c)([(0,o.Kx)("hui-gauge-card")],(function(e,t){class s extends t{constructor(...t){super(...t),e(this)}}return{F:s,d:[{kind:"method",static:!0,key:"getConfigElement",value:async function(){return await Promise.all([i.e(97084),i.e(28072)]).then(i.bind(i,20800)),document.createElement("hui-gauge-card-editor")}},{kind:"method",static:!0,key:"getStubConfig",value:function(e,t,i){return{type:"gauge",entity:(0,g.u)(e,1,t,i,["counter","input_number","number","sensor"],(e=>!isNaN(Number(e.state))))[0]||""}}},{kind:"field",decorators:[(0,o.qq)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,o.K2)()],key:"_config",value:void 0},{kind:"method",key:"getCardSize",value:function(){return 4}},{kind:"method",key:"setConfig",value:function(e){if(!e.entity)throw new Error("Entity must be specified");if(!(0,u.u)(e.entity))throw new Error("Invalid entity");this._config={min:k,max:p,...e}}},{kind:"method",key:"render",value:function(){var e,t;if(!this._config||!this.hass)return l.qs;const i=this.hass.states[this._config.entity];if(!i)return l.kP` <hui-warning> ${(0,y.G)(this.hass,this._config.entity)} </hui-warning> `;const s=Number(i.state);if(i.state===f.YV)return l.kP` <hui-warning>${this.hass.localize("ui.panel.lovelace.warning.entity_unavailable",{entity:this._config.entity})}</hui-warning> `;if(isNaN(s))return l.kP` <hui-warning>${this.hass.localize("ui.panel.lovelace.warning.entity_non_numeric",{entity:this._config.entity})}</hui-warning> `;const n=null!==(e=this._config.name)&&void 0!==e?e:(0,c.W)(i);return l.kP` <ha-card @click="${this._handleClick}" tabindex="0"> <ha-gauge .min="${this._config.min}" .max="${this._config.max}" .value="${i.state}" .formatOptions="${(0,v.BN)(i,this.hass.entities[i.entity_id])}" .locale="${this.hass.locale}" .label="${this._config.unit||(null===(t=this.hass)||void 0===t?void 0:t.states[this._config.entity].attributes.unit_of_measurement)||""}" style="${(0,r.C)({"--gauge-color":this._computeSeverity(s)})}" .needle="${this._config.needle}" .levels="${this._config.needle?this._severityLevels():void 0}"></ha-gauge> <div class="name" .title="${n}">${n}</div> </ha-card> `}},{kind:"method",key:"shouldUpdate",value:function(e){return(0,m.c7)(this,e)}},{kind:"method",key:"updated",value:function(e){if((0,n.c)((0,a.c)(s.prototype),"updated",this).call(this,e),!this._config||!this.hass)return;const t=e.get("hass"),i=e.get("_config");t&&i&&t.themes===this.hass.themes&&i.theme===this._config.theme||(0,h.q)(this,this.hass.themes,this._config.theme)}},{kind:"method",key:"_computeSeverity",value:function(e){if(this._config.needle)return;let t=this._config.segments;if(t){t=[...t].sort(((e,t)=>e.from-t.from));for(let s=0;s<t.length;s++){var i;const n=t[s];if(n&&e>=n.from&&(s+1===t.length||e<(null===(i=t[s+1])||void 0===i?void 0:i.from)))return n.color}return _.normal}const s=this._config.severity;if(!s)return _.normal;const n=Object.keys(s).map((e=>[e,s[e]]));for(const e of n)if(null==_[e[0]]||isNaN(e[1]))return _.normal;return n.sort(((e,t)=>e[1]-t[1])),e>=n[0][1]&&e<n[1][1]?_[n[0][0]]:e>=n[1][1]&&e<n[2][1]?_[n[1][0]]:e>=n[2][1]?_[n[2][0]]:_.normal}},{kind:"method",key:"_severityLevels",value:function(){const e=this._config.segments;if(e)return e.map((e=>({level:null==e?void 0:e.from,stroke:null==e?void 0:e.color,label:null==e?void 0:e.label})));const t=this._config.severity;if(!t)return[{level:0,stroke:_.normal}];return Object.keys(t).map((e=>({level:t[e],stroke:_[e]})))}},{kind:"method",key:"_handleClick",value:function(){(0,d.O)(this,"hass-more-info",{entityId:this._config.entity})}},{kind:"get",static:!0,key:"styles",value:function(){return l.gV`ha-card{cursor:pointer;height:100%;overflow:hidden;padding:16px;display:flex;align-items:center;justify-content:center;flex-direction:column;box-sizing:border-box}ha-card:focus{outline:0}ha-gauge{width:100%;max-width:250px}.name{text-align:center;line-height:initial;color:var(--primary-text-color);width:100%;font-size:15px;margin-top:8px}`}}]}}),l.oH)},10334:(e,t,i)=>{i.d(t,{Cs:()=>s,MF:()=>n,cj:()=>a});const s=(e,t,i)=>isNaN(e)||isNaN(t)||isNaN(i)?0:e>i?i:e<t?t:e,n=(e,t,i)=>100*(e-t)/(i-t),a=e=>Math.round(10*e)/10}};
//# sourceMappingURL=52044.isP2E5JqqhA.js.map