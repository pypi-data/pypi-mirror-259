# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class UploaderRequestIfExists(str, enum.Enum):
    FAIL = "fail"
    REPLACE = "replace"
    APPEND = "append"

    def visit(
        self,
        fail: typing.Callable[[], T_Result],
        replace: typing.Callable[[], T_Result],
        append: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is UploaderRequestIfExists.FAIL:
            return fail()
        if self is UploaderRequestIfExists.REPLACE:
            return replace()
        if self is UploaderRequestIfExists.APPEND:
            return append()
