name: Tests

on:
  push:
    branches:
      - main
    tags:
      - "*"  # trigger for any tag change
  pull_request:
  merge_group:

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
        session:
          - "test"
          # python-version: '3.9.18-darwin-x64'
        # include:
          # - os: "ubuntu-latest"
          #   python-version: "3.11"
          #   session: "test_x64"
          # - os: "macos-latest"
          #   python-version: "3.11"
          #   session: "test"
          # - os: "ubuntu-latest"
          #   python-version: "3.9"
          #   session: "comparison"

    steps:
      - name: "Init: checkout"
        uses: actions/checkout@v4        
        with:
          fetch-depth: 0
          submodules: true

      - name: "Init: Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install: dependencies"
        run: |
          python -m pip install -U pip
          python -m pip install -U tox tox-gh-actions

      - name: "Tests: run"
        run: |
          tox

  docs-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U tox
          python -m pip install ".[docs]"
      
      # - name: "Build: docs"
      #   run: |
      #     python -m tox --e docs

      - name: Build HTML
        run: | 
          cd docs/
          make html
      - name: Run ghp-import
        run: | 
          ghp-import -n -p -f docs/_build/html

      - name: "Upload logs on failure"
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/_build

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U build wheel twine
      - name: Build the distribution
        run: python -m build .
      - name: Check the distribution
        run: python -m twine check --strict dist/*
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish:
    environment:
      name: pypi
      url: https://pypi.org/p/exofop
    permissions:
      id-token: write
    needs: [tests, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.8.11