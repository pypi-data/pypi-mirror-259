"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from ivycheck import utils
from typing import Any, List, Optional


@dataclasses.dataclass
class Input:
    pass


@dataclasses.dataclass
class Segments:
    pass


@dataclasses.dataclass
class Info:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestCaseCreate:
    UNSET='__SPEAKEASY_UNSET__'
    dataset_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataset_id') }})
    input: Optional[Input] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('input'), 'exclude': lambda f: f is TestCaseCreate.UNSET }})
    message_history: Optional[List[Any]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message_history'), 'exclude': lambda f: f is TestCaseCreate.UNSET }})
    context: Optional[List[Any]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context'), 'exclude': lambda f: f is TestCaseCreate.UNSET }})
    golden_answer: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('golden_answer'), 'exclude': lambda f: f is TestCaseCreate.UNSET }})
    golden_context: Optional[List[Any]] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('golden_context'), 'exclude': lambda f: f is TestCaseCreate.UNSET }})
    segments: Optional[Segments] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segments'), 'exclude': lambda f: f is TestCaseCreate.UNSET }})
    info: Optional[Info] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('info'), 'exclude': lambda f: f is TestCaseCreate.UNSET }})
    

