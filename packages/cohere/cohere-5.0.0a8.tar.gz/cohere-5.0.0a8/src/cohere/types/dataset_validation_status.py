# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class DatasetValidationStatus(str, enum.Enum):
    """
    The validation status of the dataset
    """

    UNKNOWN = "unknown"
    QUEUED = "queued"
    PROCESSING = "processing"
    FAILED = "failed"
    VALIDATED = "validated"
    SKIPPED = "skipped"

    def visit(
        self,
        unknown: typing.Callable[[], T_Result],
        queued: typing.Callable[[], T_Result],
        processing: typing.Callable[[], T_Result],
        failed: typing.Callable[[], T_Result],
        validated: typing.Callable[[], T_Result],
        skipped: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is DatasetValidationStatus.UNKNOWN:
            return unknown()
        if self is DatasetValidationStatus.QUEUED:
            return queued()
        if self is DatasetValidationStatus.PROCESSING:
            return processing()
        if self is DatasetValidationStatus.FAILED:
            return failed()
        if self is DatasetValidationStatus.VALIDATED:
            return validated()
        if self is DatasetValidationStatus.SKIPPED:
            return skipped()
