Metadata-Version: 2.1
Name: rfsed
Version: 0.1.8
Summary: Package for receiver functions analysis and dealing with sediment effects in receiver functions
Home-page: https://github.com/akinremisa/rfsed
Author: Stephen Akinremi
Author-email: s.akinremi@utwente.nl
Keywords: Seismology,Receiver Function,Sediment effect in receiver functions,Crustal modelling,Moho,Earth Sciences
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Physics
Requires-Python: <3.11,>=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: decorator
Requires-Dist: matplotlib
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: obspy >=1.0.3
Requires-Dist: tqdm
Requires-Dist: OWSLib
Requires-Dist: cartopy
Requires-Dist: geographiclib
Requires-Dist: shapely
Requires-Dist: seaborn
Requires-Dist: scikit-learn
Requires-Dist: h5
Requires-Dist: h5py
Requires-Dist: obspyh5
Requires-Dist: alabaster
Requires-Dist: sphinx
Requires-Dist: colorama >=0.1.6
Requires-Dist: plotly >=5.17.0
Requires-Dist: psutil >=5.9.6
Provides-Extra: docs
Requires-Dist: sphinx <6.0 ; extra == 'docs'
Requires-Dist: pydata-sphinx-theme ; extra == 'docs'
Requires-Dist: sphinx-copybutton ; extra == 'docs'
Requires-Dist: sphinx-gallery ; extra == 'docs'
Requires-Dist: jinja2 <3.1 ; extra == 'docs'
Provides-Extra: tests
Requires-Dist: pytest ; extra == 'tests'
Requires-Dist: py ; extra == 'tests'

## A python package for receiver functions analysis and dealing with sediment effects 

[![python version](https://img.shields.io/pypi/pyversions/rf.svg)](https://python.org)


rfsed is developed specifically to implement different techniques of **analysing receiver functions
from stations overlying sedimentary layers.** The package is **adaptable, efficient, and easy-to-use** for different analysis receiver functions
obtained from stations overlying sedimentary layers.

Receiver functions techniques implemented in rfsed are:
+ H-k stacking of Zhu and Kanamori (2000)
+ Sequential H-k stacking of Yeck et al., (2013)
+ Resonance filtering and modified H-k stacking of Yu et al., (2015)
+ H-k stacking and Waveform Fitting two-step method of Akinremi et al., (2024)
+ Analysis of the synthetic reciever functions with the above-mentioned methods.


Beside these receiver function methods, rfsed has the following features:
+ Creating publication quality figures for the results of the analysis.
+ Extracting earthquake data from local seismic record files.
+ Multiprocessing options for waveform fitting and extracting earthquake data from local seismic record files.


Receiver functions streams in the rfsed are handled by the 'RFStream' class of the [rf](https://github.com/trichter/rf) open software, and it inherits a lot of useful methods from the Obspy class 'Stream'. It is supported via the obspyh5 package. For more information on class "RFStream", see documentation on [rf](https://rf.readthedocs.io/en/latest/). 
The rf framework is included in the rfsed package for completness under The MIT License (MIT) Copyright (c) 2013-2019 Tom Eulenfeld. In the rfsed modules to extract earthquake data from local seismic records, read and write support for necessary metadata is provided for SAC, SeismicHanlder and HDF5 formats based on [ObsPy](https://github.com/obspy/obspy).

The receiver function forward calculation in rfsed is done using SynR, which is modified after the [SynSeis module - seispy](https://github.com/xumi1993/seispy) project (under the GNU GENERAL PUBLIC LICENSE).




## Installation and testing of this package

### Installation from PyPi
The easiest way to install rfsed is via `pip`_::

```bash
pip install rfsed
```

## Getting started
Access rfsed's documentation [here](https://akinremisa.github.io/rfsed/).

rfsed comes with tutorials that demonstrates all its methods. You can find those in the `examples/` directory.

## Reporting Bugs / Contact the developers
This version is an early release of rfsed. If you encounter any issues or unexpected behaviour, please [open an issue](https://github.com/akinremisa/rfsed/issues/new) on GitHub.

## Questions?
If you have any questions about the package, please use the [discussions feature](https://github.com/akinremisa/rfsed/discussions/new/choose)

## Contributing
All contributions are welcome ... e.g. report bugs, discuss or add new features.

## Citing rfsed
If you found this package useful, please consider citing it.
+ Akinremi S., van der Meijde, M., Thomas, C., Afonso, J. C., Ruigrok, E., & Fadel, I. (2024). Waveform fitting of receiver functions for enhanced retrieval of crustal structure in the presence of sediments. Journal of Geophysical Research: Solid Earth (under review)

#### References
+ Yeck, W. L., Sheehan, A. F., & Schulte-Pelkum, V. (2013). Sequential h-k stacking to obtain accurate crustal thicknesses beneath sedimentary basins. Bulletin of the Seismological Society of America, 103 , 2142-2150. doi: 10.1785/0120120290
+ Yu, Y., Song, J., Liu, K. H., & Gao, S. S. (2015). Determining crustal structure beneath seismic stations overlying a low-velocity sedimentary layer using receiver functions. Journal of Geophysical Research: Solid Earth, 120 , 3208-3218. doi: 10.1002/2014JB011610
+  Zhu, L., & Kanamori, H. (2000). Moho depth variation in southern California from teleseismic receiver functions. Journal of Geophysical Research: Solid Earth, 105, 2969-2980. doi: 10.1029/1999jb900322

##### Related receiver function projects
+ [rf](https://github.com/trichter/rf) including calculation of receiver functions
+ [seispy](https://github.com/xumi1993/seispy) including hk-stacking
+ [RFPy](https://github.com/paudetseis/RfPy) including hk-stacking, harmonic decomposition
+ [BayHunter](https://github.com/jenndrei/BayHunter) inversion of receiver functions and surface wave dispersion
+ [telewavesim](https://github.com/paudetseis/Telewavesim) synthetics
+ [PyGLImER](https://github.com/PyGLImER/PyGLImER) including common conversion point imaging
