// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control/control.proto

#include "control/control.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace longportapp {
namespace control {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR Close::Close(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.reason_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.code_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CloseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseDefaultTypeInternal() {}
  union {
    Close _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseDefaultTypeInternal _Close_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Heartbeat::Heartbeat(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_.heartbeat_id_)*/ 0,
    } {}
struct HeartbeatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatDefaultTypeInternal() {}
  union {
    Heartbeat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AuthRequest::AuthRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.token_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AuthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthRequestDefaultTypeInternal() {}
  union {
    AuthRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthRequestDefaultTypeInternal _AuthRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AuthResponse::AuthResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.session_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.expires_)*/ ::int64_t{0},
      /*decltype(_impl_.limit_)*/ 0u,
      /*decltype(_impl_.online_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AuthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthResponseDefaultTypeInternal() {}
  union {
    AuthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthResponseDefaultTypeInternal _AuthResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ReconnectRequest::ReconnectRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.session_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ReconnectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReconnectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReconnectRequestDefaultTypeInternal() {}
  union {
    ReconnectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReconnectRequestDefaultTypeInternal _ReconnectRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ReconnectResponse::ReconnectResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.session_id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.expires_)*/ ::int64_t{0},
      /*decltype(_impl_.limit_)*/ 0u,
      /*decltype(_impl_.online_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ReconnectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReconnectResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReconnectResponseDefaultTypeInternal() {}
  union {
    ReconnectResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReconnectResponseDefaultTypeInternal _ReconnectResponse_default_instance_;
}  // namespace v1
}  // namespace control
}  // namespace longportapp
static ::_pb::Metadata file_level_metadata_control_2fcontrol_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_control_2fcontrol_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_control_2fcontrol_2eproto = nullptr;
const ::uint32_t TableStruct_control_2fcontrol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::Close, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::Close, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::Close, _impl_.reason_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::Heartbeat, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::Heartbeat, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::Heartbeat, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::Heartbeat, _impl_.heartbeat_id_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::AuthRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::AuthRequest, _impl_.token_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::AuthResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::AuthResponse, _impl_.session_id_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::AuthResponse, _impl_.expires_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::AuthResponse, _impl_.limit_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::AuthResponse, _impl_.online_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::ReconnectRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::ReconnectRequest, _impl_.session_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::ReconnectResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::ReconnectResponse, _impl_.session_id_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::ReconnectResponse, _impl_.expires_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::ReconnectResponse, _impl_.limit_),
    PROTOBUF_FIELD_OFFSET(::longportapp::control::v1::ReconnectResponse, _impl_.online_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::longportapp::control::v1::Close)},
        {10, 20, -1, sizeof(::longportapp::control::v1::Heartbeat)},
        {22, -1, -1, sizeof(::longportapp::control::v1::AuthRequest)},
        {31, -1, -1, sizeof(::longportapp::control::v1::AuthResponse)},
        {43, -1, -1, sizeof(::longportapp::control::v1::ReconnectRequest)},
        {52, -1, -1, sizeof(::longportapp::control::v1::ReconnectResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::longportapp::control::v1::_Close_default_instance_._instance,
    &::longportapp::control::v1::_Heartbeat_default_instance_._instance,
    &::longportapp::control::v1::_AuthRequest_default_instance_._instance,
    &::longportapp::control::v1::_AuthResponse_default_instance_._instance,
    &::longportapp::control::v1::_ReconnectRequest_default_instance_._instance,
    &::longportapp::control::v1::_ReconnectResponse_default_instance_._instance,
};
const char descriptor_table_protodef_control_2fcontrol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\025control/control.proto\022\026longportapp.con"
    "trol.v1\"\342\001\n\005Close\0226\n\004code\030\001 \001(\0162\".longpo"
    "rtapp.control.v1.Close.CodeR\004code\022\026\n\006rea"
    "son\030\002 \001(\tR\006reason\"\210\001\n\004Code\022\024\n\020HeartbeatT"
    "imeout\020\000\022\017\n\013ServerError\020\001\022\022\n\016ServerShutd"
    "own\020\002\022\017\n\013UnpackError\020\003\022\r\n\tAuthError\020\004\022\017\n"
    "\013SessExpired\020\005\022\024\n\020ConnectDuplicate\020\006\"b\n\t"
    "Heartbeat\022\034\n\ttimestamp\030\001 \001(\003R\ttimestamp\022"
    "&\n\014heartbeat_id\030\002 \001(\005H\000R\013heartbeatId\210\001\001B"
    "\017\n\r_heartbeat_id\"#\n\013AuthRequest\022\024\n\005token"
    "\030\001 \001(\tR\005token\"u\n\014AuthResponse\022\035\n\nsession"
    "_id\030\001 \001(\tR\tsessionId\022\030\n\007expires\030\002 \001(\003R\007e"
    "xpires\022\024\n\005limit\030\003 \001(\rR\005limit\022\026\n\006online\030\004"
    " \001(\rR\006online\"1\n\020ReconnectRequest\022\035\n\nsess"
    "ion_id\030\001 \001(\tR\tsessionId\"z\n\021ReconnectResp"
    "onse\022\035\n\nsession_id\030\001 \001(\tR\tsessionId\022\030\n\007e"
    "xpires\030\002 \001(\003R\007expires\022\024\n\005limit\030\003 \001(\rR\005li"
    "mit\022\026\n\006online\030\004 \001(\rR\006online*L\n\007Command\022\r"
    "\n\tCMD_CLOSE\020\000\022\021\n\rCMD_HEARTBEAT\020\001\022\014\n\010CMD_"
    "AUTH\020\002\022\021\n\rCMD_RECONNECT\020\003B\347\001\n\032com.longpo"
    "rtapp.control.v1B\014ControlProtoP\001ZAgithub"
    ".com/longportapp/openapi-protobufs/gen/g"
    "o/control;controlv1\242\002\003LCX\252\002\026Longportapp."
    "Control.V1\312\002\026Longportapp\\Control\\V1\342\002\"Lo"
    "ngportapp\\Control\\V1\\GPBMetadata\352\002\030Longp"
    "ortapp::Control::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_control_2fcontrol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_control_2fcontrol_2eproto = {
    false,
    false,
    1027,
    descriptor_table_protodef_control_2fcontrol_2eproto,
    "control/control.proto",
    &descriptor_table_control_2fcontrol_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_control_2fcontrol_2eproto::offsets,
    file_level_metadata_control_2fcontrol_2eproto,
    file_level_enum_descriptors_control_2fcontrol_2eproto,
    file_level_service_descriptors_control_2fcontrol_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_control_2fcontrol_2eproto_getter() {
  return &descriptor_table_control_2fcontrol_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_control_2fcontrol_2eproto(&descriptor_table_control_2fcontrol_2eproto);
namespace longportapp {
namespace control {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Close_Code_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_control_2fcontrol_2eproto);
  return file_level_enum_descriptors_control_2fcontrol_2eproto[0];
}
bool Close_Code_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Close_Code Close::HeartbeatTimeout;
constexpr Close_Code Close::ServerError;
constexpr Close_Code Close::ServerShutdown;
constexpr Close_Code Close::UnpackError;
constexpr Close_Code Close::AuthError;
constexpr Close_Code Close::SessExpired;
constexpr Close_Code Close::ConnectDuplicate;
constexpr Close_Code Close::Code_MIN;
constexpr Close_Code Close::Code_MAX;
constexpr int Close::Code_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Command_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_control_2fcontrol_2eproto);
  return file_level_enum_descriptors_control_2fcontrol_2eproto[1];
}
bool Command_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class Close::_Internal {
 public:
};

Close::Close(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.control.v1.Close)
}
Close::Close(const Close& from) : ::google::protobuf::Message() {
  Close* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reason_){},
      decltype(_impl_.code_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reason().empty()) {
    _this->_impl_.reason_.Set(from._internal_reason(), _this->GetArenaForAllocation());
  }
  _this->_impl_.code_ = from._impl_.code_;

  // @@protoc_insertion_point(copy_constructor:longportapp.control.v1.Close)
}
inline void Close::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.reason_){},
      decltype(_impl_.code_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.reason_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Close::~Close() {
  // @@protoc_insertion_point(destructor:longportapp.control.v1.Close)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Close::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reason_.Destroy();
}
void Close::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Close::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.control.v1.Close)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_.ClearToEmpty();
  _impl_.code_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Close::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> Close::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Close_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string reason = 2 [json_name = "reason"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Close, _impl_.reason_)}},
    // .longportapp.control.v1.Close.Code code = 1 [json_name = "code"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Close, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Close, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .longportapp.control.v1.Close.Code code = 1 [json_name = "code"];
    {PROTOBUF_FIELD_OFFSET(Close, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string reason = 2 [json_name = "reason"];
    {PROTOBUF_FIELD_OFFSET(Close, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\6\0\0\0\0\0"
    "longportapp.control.v1.Close"
    "reason"
  }},
};

::uint8_t* Close::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.control.v1.Close)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .longportapp.control.v1.Close.Code code = 1 [json_name = "code"];
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_code(), target);
  }

  // string reason = 2 [json_name = "reason"];
  if (!this->_internal_reason().empty()) {
    const std::string& _s = this->_internal_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.control.v1.Close.reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.control.v1.Close)
  return target;
}

::size_t Close::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.control.v1.Close)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reason = 2 [json_name = "reason"];
  if (!this->_internal_reason().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_reason());
  }

  // .longportapp.control.v1.Close.Code code = 1 [json_name = "code"];
  if (this->_internal_code() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Close::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Close::MergeImpl
};
const ::google::protobuf::Message::ClassData*Close::GetClassData() const { return &_class_data_; }


void Close::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Close*>(&to_msg);
  auto& from = static_cast<const Close&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.control.v1.Close)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Close::CopyFrom(const Close& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.control.v1.Close)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Close::IsInitialized() const {
  return true;
}

void Close::InternalSwap(Close* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, lhs_arena,
                                       &other->_impl_.reason_, rhs_arena);
  swap(_impl_.code_, other->_impl_.code_);
}

::google::protobuf::Metadata Close::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_control_2fcontrol_2eproto_getter, &descriptor_table_control_2fcontrol_2eproto_once,
      file_level_metadata_control_2fcontrol_2eproto[0]);
}
// ===================================================================

class Heartbeat::_Internal {
 public:
  using HasBits = decltype(std::declval<Heartbeat>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._has_bits_);
  static void set_has_heartbeat_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Heartbeat::Heartbeat(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.control.v1.Heartbeat)
}
Heartbeat::Heartbeat(const Heartbeat& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:longportapp.control.v1.Heartbeat)
}
inline void Heartbeat::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.timestamp_){::int64_t{0}},
      decltype(_impl_.heartbeat_id_){0},
  };
}
Heartbeat::~Heartbeat() {
  // @@protoc_insertion_point(destructor:longportapp.control.v1.Heartbeat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Heartbeat::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void Heartbeat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.control.v1.Heartbeat)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamp_ = ::int64_t{0};
  _impl_.heartbeat_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Heartbeat::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Heartbeat::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Heartbeat_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 heartbeat_id = 2 [json_name = "heartbeatId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Heartbeat, _impl_.heartbeat_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.heartbeat_id_)}},
    // int64 timestamp = 1 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Heartbeat, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // optional int32 heartbeat_id = 2 [json_name = "heartbeatId"];
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.heartbeat_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Heartbeat::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.control.v1.Heartbeat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 timestamp = 1 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_timestamp(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 heartbeat_id = 2 [json_name = "heartbeatId"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_heartbeat_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.control.v1.Heartbeat)
  return target;
}

::size_t Heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.control.v1.Heartbeat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 timestamp = 1 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // optional int32 heartbeat_id = 2 [json_name = "heartbeatId"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_heartbeat_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Heartbeat::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Heartbeat::MergeImpl
};
const ::google::protobuf::Message::ClassData*Heartbeat::GetClassData() const { return &_class_data_; }


void Heartbeat::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Heartbeat*>(&to_msg);
  auto& from = static_cast<const Heartbeat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.control.v1.Heartbeat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_heartbeat_id(from._internal_heartbeat_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Heartbeat::CopyFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.control.v1.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Heartbeat::IsInitialized() const {
  return true;
}

void Heartbeat::InternalSwap(Heartbeat* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.heartbeat_id_)
      + sizeof(Heartbeat::_impl_.heartbeat_id_)
      - PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata Heartbeat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_control_2fcontrol_2eproto_getter, &descriptor_table_control_2fcontrol_2eproto_once,
      file_level_metadata_control_2fcontrol_2eproto[1]);
}
// ===================================================================

class AuthRequest::_Internal {
 public:
};

AuthRequest::AuthRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.control.v1.AuthRequest)
}
AuthRequest::AuthRequest(const AuthRequest& from) : ::google::protobuf::Message() {
  AuthRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.control.v1.AuthRequest)
}
inline void AuthRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.token_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AuthRequest::~AuthRequest() {
  // @@protoc_insertion_point(destructor:longportapp.control.v1.AuthRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AuthRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
}
void AuthRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.control.v1.AuthRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AuthRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 48, 2> AuthRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AuthRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string token = 1 [json_name = "token"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token = 1 [json_name = "token"];
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\5\0\0\0\0\0\0"
    "longportapp.control.v1.AuthRequest"
    "token"
  }},
};

::uint8_t* AuthRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.control.v1.AuthRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string token = 1 [json_name = "token"];
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.control.v1.AuthRequest.token");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.control.v1.AuthRequest)
  return target;
}

::size_t AuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.control.v1.AuthRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1 [json_name = "token"];
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AuthRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AuthRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*AuthRequest::GetClassData() const { return &_class_data_; }


void AuthRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AuthRequest*>(&to_msg);
  auto& from = static_cast<const AuthRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.control.v1.AuthRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthRequest::CopyFrom(const AuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.control.v1.AuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AuthRequest::IsInitialized() const {
  return true;
}

void AuthRequest::InternalSwap(AuthRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, lhs_arena,
                                       &other->_impl_.token_, rhs_arena);
}

::google::protobuf::Metadata AuthRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_control_2fcontrol_2eproto_getter, &descriptor_table_control_2fcontrol_2eproto_once,
      file_level_metadata_control_2fcontrol_2eproto[2]);
}
// ===================================================================

class AuthResponse::_Internal {
 public:
};

AuthResponse::AuthResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.control.v1.AuthResponse)
}
AuthResponse::AuthResponse(const AuthResponse& from) : ::google::protobuf::Message() {
  AuthResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){},
      decltype(_impl_.expires_){},
      decltype(_impl_.limit_){},
      decltype(_impl_.online_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_id().empty()) {
    _this->_impl_.session_id_.Set(from._internal_session_id(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.expires_, &from._impl_.expires_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.online_) -
    reinterpret_cast<char*>(&_impl_.expires_)) + sizeof(_impl_.online_));

  // @@protoc_insertion_point(copy_constructor:longportapp.control.v1.AuthResponse)
}
inline void AuthResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){},
      decltype(_impl_.expires_){::int64_t{0}},
      decltype(_impl_.limit_){0u},
      decltype(_impl_.online_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AuthResponse::~AuthResponse() {
  // @@protoc_insertion_point(destructor:longportapp.control.v1.AuthResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AuthResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.session_id_.Destroy();
}
void AuthResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.control.v1.AuthResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  ::memset(&_impl_.expires_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.online_) -
      reinterpret_cast<char*>(&_impl_.expires_)) + sizeof(_impl_.online_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AuthResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 54, 2> AuthResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AuthResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 online = 4 [json_name = "online"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthResponse, _impl_.online_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.online_)}},
    // string session_id = 1 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.session_id_)}},
    // int64 expires = 2 [json_name = "expires"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AuthResponse, _impl_.expires_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.expires_)}},
    // uint32 limit = 3 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AuthResponse, _impl_.limit_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_id = 1 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 expires = 2 [json_name = "expires"];
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint32 limit = 3 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 online = 4 [json_name = "online"];
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.online_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\43\12\0\0\0\0\0\0"
    "longportapp.control.v1.AuthResponse"
    "session_id"
  }},
};

::uint8_t* AuthResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.control.v1.AuthResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string session_id = 1 [json_name = "sessionId"];
  if (!this->_internal_session_id().empty()) {
    const std::string& _s = this->_internal_session_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.control.v1.AuthResponse.session_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 expires = 2 [json_name = "expires"];
  if (this->_internal_expires() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_expires(), target);
  }

  // uint32 limit = 3 [json_name = "limit"];
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_limit(), target);
  }

  // uint32 online = 4 [json_name = "online"];
  if (this->_internal_online() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_online(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.control.v1.AuthResponse)
  return target;
}

::size_t AuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.control.v1.AuthResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_id = 1 [json_name = "sessionId"];
  if (!this->_internal_session_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_session_id());
  }

  // int64 expires = 2 [json_name = "expires"];
  if (this->_internal_expires() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_expires());
  }

  // uint32 limit = 3 [json_name = "limit"];
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_limit());
  }

  // uint32 online = 4 [json_name = "online"];
  if (this->_internal_online() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_online());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AuthResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AuthResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*AuthResponse::GetClassData() const { return &_class_data_; }


void AuthResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AuthResponse*>(&to_msg);
  auto& from = static_cast<const AuthResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.control.v1.AuthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_expires() != 0) {
    _this->_internal_set_expires(from._internal_expires());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  if (from._internal_online() != 0) {
    _this->_internal_set_online(from._internal_online());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthResponse::CopyFrom(const AuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.control.v1.AuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AuthResponse::IsInitialized() const {
  return true;
}

void AuthResponse::InternalSwap(AuthResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, lhs_arena,
                                       &other->_impl_.session_id_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.online_)
      + sizeof(AuthResponse::_impl_.online_)
      - PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.expires_)>(
          reinterpret_cast<char*>(&_impl_.expires_),
          reinterpret_cast<char*>(&other->_impl_.expires_));
}

::google::protobuf::Metadata AuthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_control_2fcontrol_2eproto_getter, &descriptor_table_control_2fcontrol_2eproto_once,
      file_level_metadata_control_2fcontrol_2eproto[3]);
}
// ===================================================================

class ReconnectRequest::_Internal {
 public:
};

ReconnectRequest::ReconnectRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.control.v1.ReconnectRequest)
}
ReconnectRequest::ReconnectRequest(const ReconnectRequest& from) : ::google::protobuf::Message() {
  ReconnectRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_id().empty()) {
    _this->_impl_.session_id_.Set(from._internal_session_id(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.control.v1.ReconnectRequest)
}
inline void ReconnectRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ReconnectRequest::~ReconnectRequest() {
  // @@protoc_insertion_point(destructor:longportapp.control.v1.ReconnectRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReconnectRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.session_id_.Destroy();
}
void ReconnectRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ReconnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.control.v1.ReconnectRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReconnectRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2> ReconnectRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReconnectRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string session_id = 1 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReconnectRequest, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_id = 1 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(ReconnectRequest, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\12\0\0\0\0\0\0"
    "longportapp.control.v1.ReconnectRequest"
    "session_id"
  }},
};

::uint8_t* ReconnectRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.control.v1.ReconnectRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string session_id = 1 [json_name = "sessionId"];
  if (!this->_internal_session_id().empty()) {
    const std::string& _s = this->_internal_session_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.control.v1.ReconnectRequest.session_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.control.v1.ReconnectRequest)
  return target;
}

::size_t ReconnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.control.v1.ReconnectRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_id = 1 [json_name = "sessionId"];
  if (!this->_internal_session_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ReconnectRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ReconnectRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*ReconnectRequest::GetClassData() const { return &_class_data_; }


void ReconnectRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ReconnectRequest*>(&to_msg);
  auto& from = static_cast<const ReconnectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.control.v1.ReconnectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReconnectRequest::CopyFrom(const ReconnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.control.v1.ReconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReconnectRequest::IsInitialized() const {
  return true;
}

void ReconnectRequest::InternalSwap(ReconnectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, lhs_arena,
                                       &other->_impl_.session_id_, rhs_arena);
}

::google::protobuf::Metadata ReconnectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_control_2fcontrol_2eproto_getter, &descriptor_table_control_2fcontrol_2eproto_once,
      file_level_metadata_control_2fcontrol_2eproto[4]);
}
// ===================================================================

class ReconnectResponse::_Internal {
 public:
};

ReconnectResponse::ReconnectResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.control.v1.ReconnectResponse)
}
ReconnectResponse::ReconnectResponse(const ReconnectResponse& from) : ::google::protobuf::Message() {
  ReconnectResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){},
      decltype(_impl_.expires_){},
      decltype(_impl_.limit_){},
      decltype(_impl_.online_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_id().empty()) {
    _this->_impl_.session_id_.Set(from._internal_session_id(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.expires_, &from._impl_.expires_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.online_) -
    reinterpret_cast<char*>(&_impl_.expires_)) + sizeof(_impl_.online_));

  // @@protoc_insertion_point(copy_constructor:longportapp.control.v1.ReconnectResponse)
}
inline void ReconnectResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.session_id_){},
      decltype(_impl_.expires_){::int64_t{0}},
      decltype(_impl_.limit_){0u},
      decltype(_impl_.online_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ReconnectResponse::~ReconnectResponse() {
  // @@protoc_insertion_point(destructor:longportapp.control.v1.ReconnectResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReconnectResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.session_id_.Destroy();
}
void ReconnectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ReconnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.control.v1.ReconnectResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  ::memset(&_impl_.expires_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.online_) -
      reinterpret_cast<char*>(&_impl_.expires_)) + sizeof(_impl_.online_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReconnectResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 59, 2> ReconnectResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReconnectResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 online = 4 [json_name = "online"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReconnectResponse, _impl_.online_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.online_)}},
    // string session_id = 1 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.session_id_)}},
    // int64 expires = 2 [json_name = "expires"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReconnectResponse, _impl_.expires_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.expires_)}},
    // uint32 limit = 3 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReconnectResponse, _impl_.limit_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_id = 1 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 expires = 2 [json_name = "expires"];
    {PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.expires_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint32 limit = 3 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 online = 4 [json_name = "online"];
    {PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.online_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\50\12\0\0\0\0\0\0"
    "longportapp.control.v1.ReconnectResponse"
    "session_id"
  }},
};

::uint8_t* ReconnectResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.control.v1.ReconnectResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string session_id = 1 [json_name = "sessionId"];
  if (!this->_internal_session_id().empty()) {
    const std::string& _s = this->_internal_session_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.control.v1.ReconnectResponse.session_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 expires = 2 [json_name = "expires"];
  if (this->_internal_expires() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_expires(), target);
  }

  // uint32 limit = 3 [json_name = "limit"];
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_limit(), target);
  }

  // uint32 online = 4 [json_name = "online"];
  if (this->_internal_online() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_online(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.control.v1.ReconnectResponse)
  return target;
}

::size_t ReconnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.control.v1.ReconnectResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_id = 1 [json_name = "sessionId"];
  if (!this->_internal_session_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_session_id());
  }

  // int64 expires = 2 [json_name = "expires"];
  if (this->_internal_expires() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_expires());
  }

  // uint32 limit = 3 [json_name = "limit"];
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_limit());
  }

  // uint32 online = 4 [json_name = "online"];
  if (this->_internal_online() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_online());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ReconnectResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ReconnectResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*ReconnectResponse::GetClassData() const { return &_class_data_; }


void ReconnectResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ReconnectResponse*>(&to_msg);
  auto& from = static_cast<const ReconnectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.control.v1.ReconnectResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_expires() != 0) {
    _this->_internal_set_expires(from._internal_expires());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  if (from._internal_online() != 0) {
    _this->_internal_set_online(from._internal_online());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReconnectResponse::CopyFrom(const ReconnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.control.v1.ReconnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReconnectResponse::IsInitialized() const {
  return true;
}

void ReconnectResponse::InternalSwap(ReconnectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, lhs_arena,
                                       &other->_impl_.session_id_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.online_)
      + sizeof(ReconnectResponse::_impl_.online_)
      - PROTOBUF_FIELD_OFFSET(ReconnectResponse, _impl_.expires_)>(
          reinterpret_cast<char*>(&_impl_.expires_),
          reinterpret_cast<char*>(&other->_impl_.expires_));
}

::google::protobuf::Metadata ReconnectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_control_2fcontrol_2eproto_getter, &descriptor_table_control_2fcontrol_2eproto_once,
      file_level_metadata_control_2fcontrol_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace control
}  // namespace longportapp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
