"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from onlyauth import utils
from typing import Optional


@dataclasses.dataclass
class ValidateSuccessTokenRequest:
    app_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'app_id', 'style': 'form', 'explode': True }})
    r"""Uuid of the OnlyAuth App (APPX-XXX)"""
    client_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'client_id', 'style': 'form', 'explode': True }})
    r"""Uuid of you in the OnlyAuth Platform  (CLNT-XXX)"""
    token: str = dataclasses.field(metadata={'query_param': { 'field_name': 'token', 'style': 'form', 'explode': True }})
    r"""The success token to be validated (TOKN-XXX)"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ValidateSuccessTokenResponseBody:
    r"""Success token validated successfully"""
    token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token'), 'exclude': lambda f: f is None }})
    r"""The validated success token (TOKN-XXX)"""
    end_user_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_user_uuid'), 'exclude': lambda f: f is None }})
    r"""Supplied uuid of the end user"""
    end_user_phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_user_phone_number'), 'exclude': lambda f: f is None }})
    r"""Supplied phone number of the alleged end user"""
    



@dataclasses.dataclass
class ValidateSuccessTokenResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: Optional[ValidateSuccessTokenResponseBody] = dataclasses.field(default=None)
    r"""Success token validated successfully"""
    

