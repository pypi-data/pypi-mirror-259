# coding: utf-8

"""
    SmartHome

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from mpsmarthome.models.meter_reading_response import MeterReadingResponse  # noqa: E501

class TestMeterReadingResponse(unittest.TestCase):
    """MeterReadingResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeterReadingResponse:
        """Test MeterReadingResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeterReadingResponse`
        """
        model = MeterReadingResponse()  # noqa: E501
        if include_optional:
            return MeterReadingResponse(
                address_meter_readings = [
                    mpsmarthome.models.meter_reading_response_data.MeterReadingResponseData(
                        address_meter_id = '', 
                        readings = [
                            mpsmarthome.models.meter_reading_data.MeterReadingData(
                                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                value = 1.337, 
                                info_codes = '', )
                            ], 
                        status = '', )
                    ]
            )
        else:
            return MeterReadingResponse(
        )
        """

    def testMeterReadingResponse(self):
        """Test MeterReadingResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
