Metadata-Version: 2.1
Name: pygama
Version: 1.5.1
Summary: Python package for decoding and processing digitizer data
Home-page: https://github.com/legend-exp/pygama
Author: The LEGEND collaboration
Maintainer: The LEGEND collaboration
License: GPL-3.0
Project-URL: Documentation, https://pygama.readthedocs.io
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Software Development
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: colorlog
Requires-Dist: dspeed<1.3,>=1.1
Requires-Dist: h5py>=3.2
Requires-Dist: iminuit
Requires-Dist: legend-daq2lh5<1.2,>=1.0
Requires-Dist: legend-pydataobj<1.5,>=1.3
Requires-Dist: matplotlib
Requires-Dist: numba!=0.53.*,!=0.54.*,!=0.57
Requires-Dist: numpy>=1.21
Requires-Dist: pandas>=1.4.4
Requires-Dist: pint
Requires-Dist: scikit-learn
Requires-Dist: scipy>=1.0.1
Requires-Dist: tables
Requires-Dist: tqdm>=4.27
Provides-Extra: all
Requires-Dist: pygama[docs,test]; extra == "all"
Provides-Extra: docs
Requires-Dist: furo; extra == "docs"
Requires-Dist: jupyter; extra == "docs"
Requires-Dist: myst-parser; extra == "docs"
Requires-Dist: nbsphinx; extra == "docs"
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx-copybutton; extra == "docs"
Requires-Dist: sphinx-inline-tabs; extra == "docs"
Provides-Extra: test
Requires-Dist: pre-commit; extra == "test"
Requires-Dist: pylegendtestdata; extra == "test"
Requires-Dist: pytest>=6.0; extra == "test"
Requires-Dist: pytest-cov; extra == "test"

# pygama

[![PyPI](https://img.shields.io/pypi/v/pygama?logo=pypi)](https://pypi.org/project/pygama/)
[![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/legend-exp/pygama?logo=git)](https://github.com/legend-exp/pygama/tags)
[![GitHub Workflow Status](https://img.shields.io/github/checks-status/legend-exp/pygama/main?label=main%20branch&logo=github)](https://github.com/legend-exp/pygama/actions)
[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Codecov](https://img.shields.io/codecov/c/github/legend-exp/pygama?logo=codecov)](https://app.codecov.io/gh/legend-exp/pygama)
[![GitHub issues](https://img.shields.io/github/issues/legend-exp/pygama?logo=github)](https://github.com/legend-exp/pygama/issues)
[![GitHub pull requests](https://img.shields.io/github/issues-pr/legend-exp/pygama?logo=github)](https://github.com/legend-exp/pygama/pulls)
[![License](https://img.shields.io/github/license/legend-exp/pygama)](https://github.com/legend-exp/pygama/blob/main/LICENSE)
[![Read the Docs](https://img.shields.io/readthedocs/pygama?logo=readthedocs)](https://pygama.readthedocs.io)

*pygama* is a Python package for:

- converting physics data acquisition system output to
  [LH5-format](https://legend-exp.github.io/legend-data-format-specs) HDF5
  files (functionality provided by the
  [legend-pydataobj](https://legend-pydataobj.readthedocs.io) and
  [legend-daq2lh5](https://legend-daq2lh5.readthedocs.io) packages)
- performing bulk digital signal processing (DSP) on time-series data
  (functionality provided by the [dspeed](https://dspeed.readthedocs.io)
  package)
- optimizing DSP routines and tuning associated analysis parameters
- generating and selecting high-level event data for further analysis

Check out the [online documentation](https://pygama.readthedocs.io).
