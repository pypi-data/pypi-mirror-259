Metadata-Version: 2.1
Name: sd-geninfo
Version: 0.0.3
Summary: Python CLI for reading metadata embedded in images generated by Stable Diffusion.
Home-page: https://github.com/coryg89/sd-geninfo
Author: Cory Gross
Author-email: coryg89@gmail.com
Project-URL: Bug Tracker, https://github.com/coryg89/sd-geninfo/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: imageio
Requires-Dist: pillow
Requires-Dist: piexif
Requires-Dist: rich
Requires-Dist: pyyaml

# sd-geninfo

Python CLI for reading metadata embedded in images generated by Stable Diffusion.

## Dependencies

 - [Python 3.x](https://python.org)
 - [python-pillow/Pillow](https://github.com/python-pillow/Pillow)

## Installation

```sh
$  pip install sd-geninfo
```

## Usage

```
usage: sd-geninfo [-h] [-i INPUT] [-c COLOR] [-m] [-f {json,yaml}]

Python CLI for reading metadata embedded in images generated by Stable Diffusion.

options:
  -h, --help            show this help message and exit
  -i INPUT, --input INPUT
                        Path to input image from which to read metadata,
                        alternatively you can pass the input path on stdin
  -c COLOR, --color COLOR
                        Whether or not the JSON output should be printed in
                        color, to pretty print the json result in color, defaults
                        to "--color=auto" which will pretty print when stdout is
                        detected as a terminal, pass "--color=never" to force
                        printing in plain text, pass "--color=always" to force
                        pretty printing
  -m, --minify          Whether or not to minify the json result, defaults to
                        False
  -f {json,yaml}, --format {json,yaml}
                        The format to output the metadata in, json or yaml,
                        defaults to json
```
