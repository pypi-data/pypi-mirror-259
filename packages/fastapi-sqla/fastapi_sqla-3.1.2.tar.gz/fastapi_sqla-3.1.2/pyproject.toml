[tool]
[tool.poetry]
name = "fastapi-sqla"
version = "3.1.2"
description = "SQLAlchemy extension for FastAPI with support for pagination, asyncio, SQLModel, and pytest, ready for production."
authors = ["Hadrien David <hadrien.david@dialogue.co>", "Victor Repkow <victor.repkow@dialogue.co>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/dialoguemd/fastapi-sqla"
keywords = ["FastAPI", "SQLAlchemy", "asyncio", "pytest", "alembic"]
classifiers = ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: AsyncIO", "Framework :: FastAPI", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.9", "Programming Language :: Python", "Programming Language :: SQL", "Topic :: Internet :: WWW/HTTP :: HTTP Servers", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Libraries", "Topic :: Software Development", "Typing :: Typed"]
[tool.poetry.dependencies]
python = "^3.9"
fastapi = ">=0.95.1"
pydantic = ">=1"
sqlalchemy = ">=1.3"
structlog = ">=20"
[tool.poetry.dependencies.alembic]
version = "^1.4.3"
optional = true
[tool.poetry.dependencies.asgi_lifespan]
version = "^1.0.1"
optional = true
[tool.poetry.dependencies.asyncpg]
version = "^0.28.0"
optional = true
[tool.poetry.dependencies.black]
version = "^22.8.0"
optional = true
[tool.poetry.dependencies.Faker]
version = "^14.2.0"
optional = true
[tool.poetry.dependencies.httpx]
version = "^0.23.0"
optional = true
[tool.poetry.dependencies.isort]
version = "^5.5.3"
optional = true
[tool.poetry.dependencies.pdbpp]
version = "^0.10.2"
optional = true
[tool.poetry.dependencies.psycopg2]
version = "^2.8.6"
optional = true
[tool.poetry.dependencies.pylama]
version = "^8.4.1"
optional = true
[tool.poetry.dependencies.pytest]
version = "^7.2.1"
optional = true
[tool.poetry.dependencies.pytest-asyncio]
version = "^0.19.0"
optional = true
[tool.poetry.dependencies.pytest-cov]
version = "^2.10.1"
optional = true
[tool.poetry.dependencies.tox]
version = "^3.26.0"
optional = true
[tool.poetry.dependencies.boto3]
version = "^1.24.74"
optional = true
[tool.poetry.dependencies.greenlet]
version = "^1.1.3"
optional = true
[tool.poetry.dependencies.mypy]
version = "^1.0.0"
extras = ["tests"]
optional = true
[tool.poetry.dependencies.sqlmodel]
version = "^0.0.14"
optional = true
[tool.poetry.extras]
tests = ["alembic", "asgi_lifespan", "black", "coverage", "Faker", "greenlet", "httpx", "isort", "mypy", "pdbpp", "psycopg2", "pylama", "pytest", "pytest-asyncio", "pytest-cov", "pytest-watch", "tox"]
asyncpg = ["asyncpg"]
aws_rds_iam = ["boto3"]
sqlmodel = ["sqlmodel"]
[tool.poetry.plugins]
[tool.poetry.plugins.pytest11]
fastapi-sqla = "fastapi_sqla._pytest_plugin"

[[tool.poetry.source]]
name = "dialogue-private"
url = "https://dialogue-527641002329.d.codeartifact.us-east-1.amazonaws.com/pypi/distribution-readonly/simple/"
default = true
[tool.semantic_release]
version_variable = "pyproject.toml:version"
upload_to_pypi = false
commit_message = "Version generated by python-semantic-release [ci skip]"
[tool.pylama]
paths = "fastapi_sqla tests"
linters = "pycodestyle,mccabe,pyflakes"
[tool.pylama.linter]
[tool.pylama.linter.pycodestyle]
max_line_length = 88
[tool.isort]
profile = "black"
lines_between_sections = 1
multi_line_output = 3
include_trailing_comma = "True"
line_length = 88
[tool.pytest]
[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = "tests"
norecursedirs = ".git,.venv"
xfail_strict = "true"
addopts = "    -p no:fastapi-sqla\n    --cov-config pyproject.toml\n    --cov-report term\n    --cov-report term-missing\n"
filterwarnings = ["error:.*removed in version 2.0.*:"]
[tool.pytest-watch]
[tool.pytest-watch.run]
ext = ".py, .yaml, .cfg"
[tool.coverage]
[tool.coverage.run]
branch = true
omit = ["tests/*", ".venv/*"]
concurrency = ["thread", "greenlet"]
[tool.coverage.report]
skip_covered = true
[tool.tox]
legacy_tox_ini = "[tox]\nenvlist = sqlalchemy{ 1.3, 1.4, 2.0, 2.0-sqlmodel }-{ asyncpg, noasyncpg }-{aws_rds_iam, noaws_rds_iam }-pydantic{ 1, 2 }\n\n[testenv]\npassenv = CI\ndeps =\n    sqlalchemy1.3: sqlalchemy<1.4\n    sqlalchemy1.4: sqlalchemy>=1.4,<2\n    sqlalchemy2.0: sqlalchemy>=2\n    sqlalchemy2.0-sqlmodel: sqlalchemy>=2\n    sqlalchemy2.0-sqlmodel: sqlmodel\n    asyncpg: asyncpg\n    aws_rds_iam: boto3\n    pydantic1: pydantic<2\n    pydantic2: pydantic>=2\n\nextras =\n    tests\n\ncommands = pytest -vv --cov={envsitepackagesdir}/fastapi_sqla --cov-report xml --cov-report html --junitxml=test-reports/pytest/junit.xml\n"
[tool.black]
exclude = ".mypy_cache|.pytest_cache|.vscode|.eggs|venv"
--skip-magic-trailing-comma = true
[tool.mypy]
exclude = ["tests"]
ignore_missing_imports = true
plugins = "sqlalchemy.ext.mypy.plugin"

[build-system]
requires = ["poetry>=1.3.0"]
build-backend = "poetry.masonry.api"
