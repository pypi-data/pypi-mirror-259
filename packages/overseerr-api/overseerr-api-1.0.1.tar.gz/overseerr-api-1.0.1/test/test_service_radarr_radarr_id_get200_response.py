# coding: utf-8

"""
    Overseerr API

    This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from overseerr_api.models.service_radarr_radarr_id_get200_response import ServiceRadarrRadarrIdGet200Response  # noqa: E501

class TestServiceRadarrRadarrIdGet200Response(unittest.TestCase):
    """ServiceRadarrRadarrIdGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceRadarrRadarrIdGet200Response:
        """Test ServiceRadarrRadarrIdGet200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceRadarrRadarrIdGet200Response`
        """
        model = ServiceRadarrRadarrIdGet200Response()  # noqa: E501
        if include_optional:
            return ServiceRadarrRadarrIdGet200Response(
                profiles = overseerr_api.models.service_profile.ServiceProfile(
                    id = 1, 
                    name = '720p/1080p', ),
                server = overseerr_api.models.radarr_settings.RadarrSettings(
                    active_directory = '/movies', 
                    active_profile_id = 1, 
                    active_profile_name = '720p/1080p', 
                    api_key = 'exampleapikey', 
                    base_url = '', 
                    external_url = 'http://radarr.example.com', 
                    hostname = '127.0.0.1', 
                    id = 0, 
                    is4k = False, 
                    is_default = False, 
                    minimum_availability = 'In Cinema', 
                    name = 'Radarr Main', 
                    port = 7878, 
                    prevent_search = False, 
                    sync_enabled = False, 
                    use_ssl = False, )
            )
        else:
            return ServiceRadarrRadarrIdGet200Response(
        )
        """

    def testServiceRadarrRadarrIdGet200Response(self):
        """Test ServiceRadarrRadarrIdGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
