# Poetry settings
[tool.poetry]
name = "vinyl"
version = "v0.0.8"
description = "A python framework for building next-gen analytics infrastructure"
authors = [ "Ian Tracey <ian@turntable.so>", "Justin Leder <justin@turntable.so>",]
license = "LICENSE.md"
readme = "README.md"
packages = [
    { include = "vinyl"},
]

[tool.poetry.dependencies]
python = ">=3.10, <3.12"
turntable-spoonbill = {version = "^8.0.0", extras = ["duckdb"]}
typer = { extras = ["all"], version = "^0.9.0" }
boto3 = "^1.34.13"
rustworkx = "^0.13.2"
pydantic = "^2.5.3"
python-dotenv = "^1.0.0"
sqlglot = { extras = ["rs"], version = "^20.7.1" }
toml = "^0.10.2"
geopandas = "^0.14.2"
lets-plot = "^4.2.0"
watchdog = {extras = ["watchmedo"], version = "^3.0.0"}
fsspec = {version = "^2024.2.0"}
tqdm = "^4.66.1"
textual = "^0.49.0"
netext = "^0.2.1"
google-auth = "^2.28.0"
cibuildwheel = "^2.16.5"
nuitka = "^2.0.3"
platformdirs = ">=3.0,<4.0"
fastapi = "^0.110.0"
uvicorn = "^0.27.1"
httpx = "^0.27.0"

[tool.poetry.urls]
homepage = "https://www.turntable.so/"
documentation = "https://turntable-so.github.io/docs/"
changelog = "https://turntable-so.github.io/docs/changelog"

[tool.poetry.scripts]
vinyl = "vinyl.cli.main:app"

[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
ipython = "^8"
pyinstrument = "^4.6.1"
graphviz = "^0.20.1"
types-pytz = "^2023.3.1.1"
types-toml = "^0.10.8.7"
ipykernel = "^6.28.0"
vulture = "^2.10"
ipdb = "^0.13.13"
pandas-stubs = "^2.1.4.231227"
pytest-asyncio = "^0.23.5"

# Extras
## uses setuptools api which is more flexible, allowing extras from other extras. Replaced as part of build process
[project.optional-dependencies]
duckdb = ["turntable-spoonbill[duckdb]"]
postgres = ["turntable-spoonbill[postgres]"]
bigquery = ["turntable-spoonbill[bigquery]"]
snowflake = ["turntable-spoonbill[snowflake]"]
abfs =  ["fsspec[abfs]"]
adl = ["fsspec[adl]"]
dask = ["fsspec[dask]"]
dropbox = ["fsspec[dropbox]"]
gcs = ["fsspec[gcs]"]
git = ["fsspec[git]"]
github = ["fsspec[github]"]
hdfs = ["fsspec[hdfs]"]
arrow = ["fsspec[arrow]"]
http = ["fsspec[http]"]
sftp = ["fsspec[sftp]"]
s3 = ["fsspec[s3]"]
oci = ["fsspec[oci]"]
smb = ["fsspec[smb]"]
ssh = ["fsspec[ssh]"]
fuse = ["fsspec[fuse]"]
libarchive = ["fsspec[libarchive]"]
boxfs = ["boxfs"]
hf = ["huggingface_hub"]
webdav = ["webdav4"]
ossfs = ["ossfs"]
lakefs = ["lakefs-spec"]
dvc = ["dvc"]



# Setuptools
[tool.setuptools.package-data]
my_package = [ "py.typed",]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["."] by default)
exclude = ["internal_project*"]  # package names should match these glob patterns (["*"] by default)
namespaces = false  # to disable scanning  420 namespaces (true by default)

# Other
[tool.pytest.ini_options]
addopts = "tests/ --color=yes -v"

[tool.cibuildwheel]
build-frontend = "build"
build = "cp39-* cp310-* cp311-*"
skip = "*-musllinux*"
before-all = [
    "pip install poetry",
    "poetry export --without-hashes --format=requirements.txt > requirements.txt",
    "pip install -r requirements.txt",
]
archs = "native"
# test-requires = "pytest pytest-mock dbt-duckdb~=1.5.0"
# test-command = "pytest -l -x -v {project} --ignore={project}/tests/fixtures  --ignore={project}/tests/ci --log-level=INFO"

[tool.vinyl]
tz = "America/New_York"
dark-mode = true
module_name = "internal_project"

[build-system]
requires = ["poetry"]
build-backend = "poetry.masonry.api"