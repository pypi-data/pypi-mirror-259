# coding: utf-8

"""
    projects-api

    These APIs allows you to create workflow statuses, which are then assigned to workflows. These workflows, containing multiple statuses, are subsequently linked to projects. Additionally, candidates are associated with projects, defining the path they are meant to follow within the established workflows.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: phenom
"""

import pprint
import re  # noqa: F401

import six

class CreateWorkflowStatusRequest(object):
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'status_type': 'str',
        'status_code': 'str',
        'created_by_recruiter_info': 'CreateProjectRequestCreatedRecruiterInfo'
    }

    attribute_map = {
        'name': 'name',
        'status_type': 'statusType',
        'status_code': 'statusCode',
        'created_by_recruiter_info': 'createdByRecruiterInfo'
    }

    def __init__(self, name=None, status_type=None, status_code=None, created_by_recruiter_info=None):  # noqa: E501
        """CreateWorkflowStatusRequest - a model defined in Swagger"""  # noqa: E501
        self._name = None
        self._status_type = None
        self._status_code = None
        self._created_by_recruiter_info = None
        self.discriminator = None
        if name is not None:
            self.name = name
        if status_type is not None:
            self.status_type = status_type
        if status_code is not None:
            self.status_code = status_code
        if created_by_recruiter_info is not None:
            self.created_by_recruiter_info = created_by_recruiter_info

    @property
    def name(self):
        """Gets the name of this CreateWorkflowStatusRequest.  # noqa: E501


        :return: The name of this CreateWorkflowStatusRequest.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateWorkflowStatusRequest.


        :param name: The name of this CreateWorkflowStatusRequest.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def status_type(self):
        """Gets the status_type of this CreateWorkflowStatusRequest.  # noqa: E501


        :return: The status_type of this CreateWorkflowStatusRequest.  # noqa: E501
        :rtype: str
        """
        return self._status_type

    @status_type.setter
    def status_type(self, status_type):
        """Sets the status_type of this CreateWorkflowStatusRequest.


        :param status_type: The status_type of this CreateWorkflowStatusRequest.  # noqa: E501
        :type: str
        """

        self._status_type = status_type

    @property
    def status_code(self):
        """Gets the status_code of this CreateWorkflowStatusRequest.  # noqa: E501


        :return: The status_code of this CreateWorkflowStatusRequest.  # noqa: E501
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this CreateWorkflowStatusRequest.


        :param status_code: The status_code of this CreateWorkflowStatusRequest.  # noqa: E501
        :type: str
        """

        self._status_code = status_code

    @property
    def created_by_recruiter_info(self):
        """Gets the created_by_recruiter_info of this CreateWorkflowStatusRequest.  # noqa: E501


        :return: The created_by_recruiter_info of this CreateWorkflowStatusRequest.  # noqa: E501
        :rtype: CreateProjectRequestCreatedRecruiterInfo
        """
        return self._created_by_recruiter_info

    @created_by_recruiter_info.setter
    def created_by_recruiter_info(self, created_by_recruiter_info):
        """Sets the created_by_recruiter_info of this CreateWorkflowStatusRequest.


        :param created_by_recruiter_info: The created_by_recruiter_info of this CreateWorkflowStatusRequest.  # noqa: E501
        :type: CreateProjectRequestCreatedRecruiterInfo
        """

        self._created_by_recruiter_info = created_by_recruiter_info

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateWorkflowStatusRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateWorkflowStatusRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
