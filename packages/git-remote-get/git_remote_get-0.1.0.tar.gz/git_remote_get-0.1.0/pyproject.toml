[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "git-remote-get"
version = "0.1.0"
description = ""
authors = ["01Joseph-Hwang10 <joseph95501@gmail.com>"]
license = "MIT"
readme = "README.md"
exclude = ["**/tests", "**/package.json", "**/project.json"]
[[tool.poetry.packages]]
include = "gget"

[tool.black]
line-length = 88
target-version = ["py311"]
include = "\\.pyi?$"
extend-exclude = "/(\n  # The following are specific to Black, you probably don't want those.\n  tests/data\n  | profiling\n)/\n"

[tool.poetry.scripts]
gget = "gget.__main__:cli"
git-remote-get = "gget.__main__:cli"

[tool.poe.tasks]
test = "python -m pytest"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
python-dotenv = "^1.0.0"
click = "^8.1.7"
pygithub = "^2.2.0"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
black = "^23.9.1"
pre-commit = "^3.4.0"
commitizen = "^3.10.0"
poethepoet = "^0.24.4"

[tool.poetry.group.test.dependencies]
faker = "^20.1.0"
pytest = "^7.4.3"
pytest-order = "^1.2.0"

[tool.poetry.group.ci.dependencies]
python-semantic-release = "^8.3.0"

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_toml = ["pyproject.toml:tool.poetry.version"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "feat",
  "fix",
  "perf",
  "style",
  "refactor",
  "test",
]
minor_tags = ["feat"]
patch_tags = [
  "fix",
  "perf",
  "build",
  "chore",
  "ci",
  "docs",
  "style",
  "refactor",
  "test",
]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
